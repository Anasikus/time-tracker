generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id            Int       @id @default(autoincrement())
  nickname      String
  statusId      Int
  positionId    Int
  serverId      Int?
  createdAt     DateTime  @default(now())
  vacationStart DateTime? // начало отпуска
  vacationEnd   DateTime? // конец отпуска (опционально)
  comment       String? // комментарий

  status          Status            @relation(fields: [statusId], references: [id])
  position        Position          @relation(fields: [positionId], references: [id])
  server          Server?           @relation(fields: [serverId], references: [id])
  timeLogs        TimeLog[]
  ModerationStats ModerationStats[]

  @@map("players")
}

model TimeLog {
  id        Int      @id @default(autoincrement())
  playerId  Int
  date      DateTime
  duration  Int
  createdAt DateTime @default(now())

  player Player @relation(fields: [playerId], references: [id], onDelete: Cascade)

  @@unique([playerId, date])
}

model Status {
  id      Int      @id @default(autoincrement())
  label   String   @unique
  players Player[]

  @@map("statuses")
}

model Position {
  id      Int      @id @default(autoincrement())
  title   String   @unique
  players Player[]

  @@map("positions")
}

model Server {
  id      Int      @id @default(autoincrement())
  name    String
  players Player[]

  @@map("servers")
}

model ModerationStats {
  id            Int      @id @default(autoincrement())
  playerId      Int
  month         DateTime // указывает месяц (например, 2025-07-01)
  complaints    Int
  appeals       Int
  modComplaints Int
  trainees      Int
  moderators    Int

  player        Player   @relation(fields: [playerId], references: [id])

  @@unique([playerId, month])
}
